package templates

type ModalProps struct {
	ID      string
	Text    string
	Color   string
}

templ Modal(props ModalProps) {
	<div
		x-data="{ modalOpen: false }"
		@keydown.escape.window="modalOpen = false"
		class="relative z-50 w-auto h-auto"
	>
        switch props.Color {
            case "primary":
                <button id={ props.ID } @click="modalOpen=true" class="text-base-100 bg-primary hover:bg-primary/80 w-1/2 mt-3 inline-flex items-center justify-center px-4 py-2 font-medium text-sm rounded-md">
                    @Spinner(props.Text)
                </button>
            case "secondary":
                <button id={ props.ID } @click="modalOpen=true" class="text-base-100 bg-secondary hover:bg-secondary/80 w-1/2 mt-3 inline-flex items-center justify-center px-4 py-2 font-medium text-sm rounded-md">
                    @Spinner(props.Text)
                </button>
            case "accent":
                <button id={ props.ID } @click="modalOpen=true" class="text-base-100 bg-accent hover:bg-accent/80 w-1/2 mt-3 inline-flex items-center justify-center px-4 py-2 font-medium text-sm rounded-md">
                    @Spinner(props.Text)
                </button>
            case "info":
                <button id={ props.ID } @click="modalOpen=true" class="text-base-100 bg-info hover:bg-info/80 w-1/2 mt-3 inline-flex items-center justify-center px-4 py-2 font-medium text-sm rounded-md">
                    @Spinner(props.Text)
                </button>
            case "success":
                <button id={ props.ID } @click="modalOpen=true" class="text-base-100 bg-success hover:bg-success/80 w-1/2 mt-3 inline-flex items-center justify-center px-4 py-2 font-medium text-sm rounded-md">
                    @Spinner(props.Text)
                </button>
            case "warning":
                <button id={ props.ID } @click="modalOpen=true" class="text-base-100 bg-warning hover:bg-warning/80 w-1/2 mt-3 inline-flex items-center justify-center px-4 py-2 font-medium text-sm rounded-md">
                    @Spinner(props.Text)
                </button>
            case "error":
                <button id={ props.ID } @click="modalOpen=true" class="text-base-100 bg-error hover:bg-error/80 w-1/2 mt-3 inline-flex items-center justify-center px-4 py-2 font-medium text-sm rounded-md">
                    @Spinner(props.Text)
                </button>
            default:
                <button id={ props.ID } @click="modalOpen=true" class="text-base-100 bg-neutral hover:bg-neutral/80 w-1/2 mt-3 inline-flex items-center justify-center px-4 py-2 font-medium text-sm rounded-md">
                    @Spinner(props.Text)
                </button>
        }
		<template x-teleport="body">
			<div x-show="modalOpen" class="fixed top-0 left-0 z-[99] flex items-center justify-center w-screen h-screen" x-cloak>
			    <div
                    x-show="modalOpen"
                    x-transition:enter="ease-out duration-300"
                    x-transition:enter-start="opacity-0"
                    x-transition:enter-end="opacity-100"
                    x-transition:leave="ease-in duration-300"
                    x-transition:leave-start="opacity-100"
                    x-transition:leave-end="opacity-0"
                    @click="modalOpen=false"
                    class="absolute inset-0 w-full h-full bg-black bg-opacity-40">
                </div>
				<div
					x-show="modalOpen"
					x-trap.inert.noscroll="modalOpen"
					x-transition:enter="ease-out duration-300"
					x-transition:enter-start="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
					x-transition:enter-end="opacity-100 translate-y-0 sm:scale-100"
					x-transition:leave="ease-in duration-200"
					x-transition:leave-start="opacity-100 translate-y-0 sm:scale-100"
					x-transition:leave-end="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
					class="relative py-2 px-3 w-2/3 h-2/3 bg-base-100 overflow-auto"
				>
	                <div class="relative w-auto bg-base-100">
                        <button @click="modalOpen=false" class="absolute top-0 right-0">
                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-close hover:font-bold primary-content">
                                <path d="M18 6 6 18"></path>
                                <path d="m6 6 12 12"></path>
                            </svg>
                        </button>
		                { children... }
	                </div>
				</div>
			</div>
		</template>
	</div>
}
