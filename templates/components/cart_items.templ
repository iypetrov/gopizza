package components

import (
	"fmt"
	"github.com/iypetrov/gopizza/configs"
	"github.com/iypetrov/gopizza/internal/dtos"
	"github.com/iypetrov/gopizza/templates"
)

templ CartItems(resps []dtos.CartResponse, total string) {
	<div
		id="cartItems"
		x-data="paymentHandler"
		hx-get={ fmt.Sprintf("%s/payments/config", configs.Get().ClientAPIPrefix()) }
		hx-trigger="load"
		hx-swap="none"
		alert-data={ total }
		@htmx:after-request="initPayment($event)"
		class="flex flex-row justify-between gap-4 w-full h-full overflow-hidden"
	>
		<div class="w-1/2 flex flex-col">
			<div class="w-full flex flex-col justify-center items-center max-h-[80vh] overflow-y-auto">
				for _, val := range resps {
					@CartItem(val)
				}
			</div>
			if len(resps) != 0 {
				<h1 class="flex flex-col w-full justify-center items-center text-right font-bold">
					{ total }
				</h1>
			}
		</div>
		<div class="w-1/2 flex flex-col justify-center items-center">
			@templates.BigLogo()
			<div id="paymentForm">
				<div id="paymentElement"></div>
				<br class="flex-none"/>
				<button 
					@click="confirmPayment"
					class="btn btn-sm btn-square btn-error rounded-md text-base-100 w-full"
				>
					Pay
				</button>
			</div>
		</div>
	</div>
}
