package components

import (
    "fmt"
	"github.com/iypetrov/gopizza/templates"
    "github.com/iypetrov/gopizza/configs"
    "github.com/iypetrov/gopizza/internal/dtos"
)

templ PizzaCreateForm(req dtos.PizzaRequest, errs map[string]string) {
    <form id="pizzaCreateForm" autocomplete="off" class="flex flex-col items-center justify-center w-full bg-base-100">
        <div class="w-full h-auto">
            <div class="flex flex-col w-full">
                @templates.Input(templates.InputProps{Name: "name", Value: req.Name, Error: errs["name"]})
            </div>
            <div class="divider"></div>
            <div class="flex flex-col w-full">
                if (req.Price == 0) {
                    @templates.Input(templates.InputProps{Name: "price", Value: "", Error: errs["price"]})
                } else {
                    @templates.Input(templates.InputProps{Name: "price", Value: fmt.Sprintf("%.2f", req.Price), Error: errs["price"]})
                }
            </div>
            <div class="divider"></div>
            <div class="flex flex-col w-full">
                @templates.Input(templates.InputProps{Name: "imageUrl", Value: req.ImageUrl, Error: errs["imageUrl"]})
            </div>
            <div class="divider"></div>
            <div class="flex flex-col space-y-2 w-full">
                <label class="label primary-content font-bold text-lg">Ingredients</label>
                <div class="grid grid-cols-[repeat(auto-fit,minmax(150px,1fr))] gap-x-4 gap-y-2">
                    @templates.Checkbox(templates.CheckboxProps{Name: "tomatoes", Value: req.Tomatoes})
                    @templates.Checkbox(templates.CheckboxProps{Name: "garlic", Value: req.Garlic})
                    @templates.Checkbox(templates.CheckboxProps{Name: "onion", Value: req.Onion})
                    @templates.Checkbox(templates.CheckboxProps{Name: "parmesan", Value: req.Parmesan})
                    @templates.Checkbox(templates.CheckboxProps{Name: "cheddar", Value: req.Cheddar})
                    @templates.Checkbox(templates.CheckboxProps{Name: "pepperoni", Value: req.Pepperoni})
                    @templates.Checkbox(templates.CheckboxProps{Name: "sausage", Value: req.Sausage})
                    @templates.Checkbox(templates.CheckboxProps{Name: "ham", Value: req.Ham})
                    @templates.Checkbox(templates.CheckboxProps{Name: "bacon", Value: req.Bacon})
                    @templates.Checkbox(templates.CheckboxProps{Name: "chicken", Value: req.Chicken})
                    @templates.Checkbox(templates.CheckboxProps{Name: "salami", Value: req.Salami})
                    @templates.Checkbox(templates.CheckboxProps{Name: "groundBeef", Value: req.GroundBeef})
                    @templates.Checkbox(templates.CheckboxProps{Name: "mushrooms", Value: req.Mushrooms})
                    @templates.Checkbox(templates.CheckboxProps{Name: "olives", Value: req.Olives})
                    @templates.Checkbox(templates.CheckboxProps{Name: "spinach", Value: req.Spinach})
                    @templates.Checkbox(templates.CheckboxProps{Name: "pineapple", Value: req.Pineapple})
                    @templates.Checkbox(templates.CheckboxProps{Name: "arugula", Value: req.Arugula})
                    @templates.Checkbox(templates.CheckboxProps{Name: "anchovies", Value: req.Anchovies})
                    @templates.Checkbox(templates.CheckboxProps{Name: "capers", Value: req.Capers})
                </div>
            </div>
            <div class="flex items-center justify-center w-full mt-3"> 
                <button id="pizzaCreateFormButton" type="submit" hx-disabled-elt="this" hx-post={ fmt.Sprintf("%s/pizza", configs.Get().GetAPIPrefix()) } hx-on::after-request="modalOpen=true" class="text-base-100 bg-secondary hover:bg-secondary/80 mt-3 inline-flex items-center justify-center px-4 py-2 font-medium text-sm rounded-md">
                    @templates.Spinner() {
                        <span>Submit</span>
                    }
                </button>
            </div>
        </div>
    </form>
}
